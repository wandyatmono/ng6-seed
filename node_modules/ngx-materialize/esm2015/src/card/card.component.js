/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { ChangeDetectorRef, Component, Directive, ElementRef, HostBinding, Input, ViewChild, } from '@angular/core';
export class MzCardComponent {
    /**
     * @param {?} changeDetectorRef
     */
    constructor(changeDetectorRef) {
        this.changeDetectorRef = changeDetectorRef;
        this.hasCardAction = true;
        this.hasCardTitle = true;
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.hasCardTitle = this.hasTitleTagAndNotEmpty();
        this.hasCardAction = this.hasActionTagAndNotEmpty();
        this.changeDetectorRef.detectChanges();
    }
    /**
     * @return {?}
     */
    hasActionTagAndNotEmpty() {
        const /** @type {?} */ cardActionElement = this.cardAction.nativeElement.querySelector('mz-card-action');
        return this.isElementDisplayed(cardActionElement);
    }
    /**
     * @return {?}
     */
    hasTitleTagAndNotEmpty() {
        const /** @type {?} */ cardTitleElement = this.cardTitle.nativeElement.querySelector('mz-card-title');
        return this.isElementDisplayed(cardTitleElement);
    }
    /**
     * @param {?} element
     * @return {?}
     */
    isElementDisplayed(element) {
        return element && element.innerHTML.trim() !== '';
    }
}
MzCardComponent.decorators = [
    { type: Component, args: [{
                selector: 'mz-card',
                template: `<div class="card-content">

  <div #cardTitle class="card-title" *ngIf="hasCardTitle">
    <ng-content select="mz-card-title"></ng-content>
  </div>

  <ng-content select="mz-card-content"></ng-content>
</div>

<div #cardAction class="card-action" *ngIf="hasCardAction">
  <ng-content select="mz-card-action"></ng-content>
</div>`,
                styles: [`:host{display:block}`],
            },] },
];
/** @nocollapse */
MzCardComponent.ctorParameters = () => [
    { type: ChangeDetectorRef, },
];
MzCardComponent.propDecorators = {
    "true": [{ type: HostBinding, args: ['class.card',] },],
    "hoverable": [{ type: HostBinding, args: ['class.hoverable',] }, { type: Input },],
    "cardTitle": [{ type: ViewChild, args: ['cardTitle',] },],
    "cardAction": [{ type: ViewChild, args: ['cardAction',] },],
};
function MzCardComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    MzCardComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    MzCardComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    MzCardComponent.propDecorators;
    /** @type {?} */
    MzCardComponent.prototype.true;
    /** @type {?} */
    MzCardComponent.prototype.hoverable;
    /** @type {?} */
    MzCardComponent.prototype.cardTitle;
    /** @type {?} */
    MzCardComponent.prototype.cardAction;
    /** @type {?} */
    MzCardComponent.prototype.hasCardAction;
    /** @type {?} */
    MzCardComponent.prototype.hasCardTitle;
    /** @type {?} */
    MzCardComponent.prototype.changeDetectorRef;
}
export class MzCardTitleDirective {
}
MzCardTitleDirective.decorators = [
    { type: Directive, args: [{ selector: 'mz-card-title' },] },
];
function MzCardTitleDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    MzCardTitleDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    MzCardTitleDirective.ctorParameters;
}
export class MzCardContentDirective {
}
MzCardContentDirective.decorators = [
    { type: Directive, args: [{ selector: 'mz-card-content' },] },
];
function MzCardContentDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    MzCardContentDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    MzCardContentDirective.ctorParameters;
}
export class MzCardActionDirective {
}
MzCardActionDirective.decorators = [
    { type: Directive, args: [{ selector: 'mz-card-action' },] },
];
function MzCardActionDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    MzCardActionDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    MzCardActionDirective.ctorParameters;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtbWF0ZXJpYWxpemUvIiwic291cmNlcyI6WyJzcmMvY2FyZC9jYXJkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUVMLGlCQUFpQixFQUNqQixTQUFTLEVBQ1QsU0FBUyxFQUNULFVBQVUsRUFDVixXQUFXLEVBQ1gsS0FBSyxFQUNMLFNBQVMsR0FDVixNQUFNLGVBQWUsQ0FBQztBQWtCdkIsTUFBTTs7OztJQVVKLFlBQ1U7UUFBQSxzQkFBaUIsR0FBakIsaUJBQWlCOzZCQUpYLElBQUk7NEJBQ0wsSUFBSTtLQUlmOzs7O0lBRUosZUFBZTtRQUNiLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLHNCQUFzQixFQUFFLENBQUM7UUFDbEQsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsdUJBQXVCLEVBQUUsQ0FBQztRQUNwRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsYUFBYSxFQUFFLENBQUM7S0FDeEM7Ozs7SUFFTyx1QkFBdUI7UUFDN0IsdUJBQU0saUJBQWlCLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDeEYsTUFBTSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDOzs7OztJQUc1QyxzQkFBc0I7UUFDNUIsdUJBQU0sZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ3JGLE1BQU0sQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsZ0JBQWdCLENBQUMsQ0FBQzs7Ozs7O0lBRzNDLGtCQUFrQixDQUFDLE9BQW9CO1FBQzdDLE1BQU0sQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUM7Ozs7WUEvQ3JELFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsU0FBUztnQkFDbkIsUUFBUSxFQUFFOzs7Ozs7Ozs7OztPQVdMO2dCQUNMLE1BQU0sRUFBRSxDQUFDLHNCQUFzQixDQUFDO2FBQ2pDOzs7O1lBeEJDLGlCQUFpQjs7O3FCQTBCaEIsV0FBVyxTQUFDLFlBQVk7MEJBQ3hCLFdBQVcsU0FBQyxpQkFBaUIsY0FBRyxLQUFLOzBCQUVyQyxTQUFTLFNBQUMsV0FBVzsyQkFDckIsU0FBUyxTQUFDLFlBQVk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlDaUIsTUFBTTs7O1lBQS9DLFNBQVMsU0FBQyxFQUFFLFFBQVEsRUFBRSxlQUFlLEVBQUU7Ozs7Ozs7Ozs7O0FBQ0ksTUFBTTs7O1lBQWpELFNBQVMsU0FBQyxFQUFFLFFBQVEsRUFBRSxpQkFBaUIsRUFBRTs7Ozs7Ozs7Ozs7QUFDQyxNQUFNOzs7WUFBaEQsU0FBUyxTQUFDLEVBQUUsUUFBUSxFQUFFLGdCQUFnQixFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBBZnRlclZpZXdJbml0LFxyXG4gIENoYW5nZURldGVjdG9yUmVmLFxyXG4gIENvbXBvbmVudCxcclxuICBEaXJlY3RpdmUsXHJcbiAgRWxlbWVudFJlZixcclxuICBIb3N0QmluZGluZyxcclxuICBJbnB1dCxcclxuICBWaWV3Q2hpbGQsXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ216LWNhcmQnLFxyXG4gIHRlbXBsYXRlOiBgPGRpdiBjbGFzcz1cImNhcmQtY29udGVudFwiPlxyXG5cclxuICA8ZGl2ICNjYXJkVGl0bGUgY2xhc3M9XCJjYXJkLXRpdGxlXCIgKm5nSWY9XCJoYXNDYXJkVGl0bGVcIj5cclxuICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIm16LWNhcmQtdGl0bGVcIj48L25nLWNvbnRlbnQ+XHJcbiAgPC9kaXY+XHJcblxyXG4gIDxuZy1jb250ZW50IHNlbGVjdD1cIm16LWNhcmQtY29udGVudFwiPjwvbmctY29udGVudD5cclxuPC9kaXY+XHJcblxyXG48ZGl2ICNjYXJkQWN0aW9uIGNsYXNzPVwiY2FyZC1hY3Rpb25cIiAqbmdJZj1cImhhc0NhcmRBY3Rpb25cIj5cclxuICA8bmctY29udGVudCBzZWxlY3Q9XCJtei1jYXJkLWFjdGlvblwiPjwvbmctY29udGVudD5cclxuPC9kaXY+YCxcclxuICBzdHlsZXM6IFtgOmhvc3R7ZGlzcGxheTpibG9ja31gXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIE16Q2FyZENvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xyXG4gIEBIb3N0QmluZGluZygnY2xhc3MuY2FyZCcpIHRydWU7XHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5ob3ZlcmFibGUnKSBASW5wdXQoKSBob3ZlcmFibGU6IGJvb2xlYW47XHJcblxyXG4gIEBWaWV3Q2hpbGQoJ2NhcmRUaXRsZScpIGNhcmRUaXRsZTogRWxlbWVudFJlZjtcclxuICBAVmlld0NoaWxkKCdjYXJkQWN0aW9uJykgY2FyZEFjdGlvbjogRWxlbWVudFJlZjtcclxuXHJcbiAgaGFzQ2FyZEFjdGlvbiA9IHRydWU7XHJcbiAgaGFzQ2FyZFRpdGxlID0gdHJ1ZTtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIGNoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZixcclxuICApIHt9XHJcblxyXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcclxuICAgIHRoaXMuaGFzQ2FyZFRpdGxlID0gdGhpcy5oYXNUaXRsZVRhZ0FuZE5vdEVtcHR5KCk7XHJcbiAgICB0aGlzLmhhc0NhcmRBY3Rpb24gPSB0aGlzLmhhc0FjdGlvblRhZ0FuZE5vdEVtcHR5KCk7XHJcbiAgICB0aGlzLmNoYW5nZURldGVjdG9yUmVmLmRldGVjdENoYW5nZXMoKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgaGFzQWN0aW9uVGFnQW5kTm90RW1wdHkoKTogYm9vbGVhbiB7XHJcbiAgICBjb25zdCBjYXJkQWN0aW9uRWxlbWVudCA9IHRoaXMuY2FyZEFjdGlvbi5uYXRpdmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ216LWNhcmQtYWN0aW9uJyk7XHJcbiAgICByZXR1cm4gdGhpcy5pc0VsZW1lbnREaXNwbGF5ZWQoY2FyZEFjdGlvbkVsZW1lbnQpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBoYXNUaXRsZVRhZ0FuZE5vdEVtcHR5KCk6IGJvb2xlYW4ge1xyXG4gICAgY29uc3QgY2FyZFRpdGxlRWxlbWVudCA9IHRoaXMuY2FyZFRpdGxlLm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvcignbXotY2FyZC10aXRsZScpO1xyXG4gICAgcmV0dXJuIHRoaXMuaXNFbGVtZW50RGlzcGxheWVkKGNhcmRUaXRsZUVsZW1lbnQpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBpc0VsZW1lbnREaXNwbGF5ZWQoZWxlbWVudDogSFRNTEVsZW1lbnQpOiBib29sZWFuIHtcclxuICAgIHJldHVybiBlbGVtZW50ICYmIGVsZW1lbnQuaW5uZXJIVE1MLnRyaW0oKSAhPT0gJyc7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBEZWNsYXJlIHRoZSB0YWdzIHRvIGF2b2lkIGVycm9yOiAnPG16LWNhcmQteD4nIGlzIG5vdCBhIGtub3duIGVsZW1lbnRcclxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2FuZ3VsYXIvYW5ndWxhci9pc3N1ZXMvMTEyNTFcclxuLy8gdHNsaW50OmRpc2FibGU6IGRpcmVjdGl2ZS1zZWxlY3RvclxyXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdtei1jYXJkLXRpdGxlJyB9KSBleHBvcnQgY2xhc3MgTXpDYXJkVGl0bGVEaXJlY3RpdmUgeyB9XHJcbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ216LWNhcmQtY29udGVudCcgfSkgZXhwb3J0IGNsYXNzIE16Q2FyZENvbnRlbnREaXJlY3RpdmUgeyB9XHJcbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ216LWNhcmQtYWN0aW9uJyB9KSBleHBvcnQgY2xhc3MgTXpDYXJkQWN0aW9uRGlyZWN0aXZlIHsgfVxyXG4iXX0=