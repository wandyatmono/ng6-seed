/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { MzBadgeModule } from './badge/badge.module';
import { MzButtonModule } from './button/button.module';
import { MzCardModule } from './card/card.module';
import { MzCheckboxModule } from './checkbox/checkbox.module';
import { MzChipModule } from './chip/chip.module';
import { MzCollapsibleModule } from './collapsible/collapsible.module';
import { MzCollectionModule } from './collection/collection.module';
import { MzDatepickerModule } from './datepicker/datepicker.module';
import { MzDropdownModule } from './dropdown/dropdown.module';
import { MzFeatureDiscoveryModule } from './feature-discovery/feature-discovery.module';
import { MzIconMdiModule } from './icon-mdi/icon-mdi.module';
import { MzIconModule } from './icon/icon.module';
import { MzInputModule } from './input/input.module';
import { MzMediaModule } from './media/media.module';
import { MzModalModule } from './modal/modal.module';
import { MzNavbarModule } from './navbar/navbar.module';
import { MzPaginationModule } from './pagination/pagination.module';
import { MzParallaxModule } from './parallax/parallax.module';
import { MzProgressModule } from './progress/progress.module';
import { MzRadioButtonModule } from './radio-button/radio-button.module';
import { MzSelectModule } from './select/select.module';
import { MzInjectionModule } from './shared/injection/injection.module';
import { MzSidenavModule } from './sidenav/sidenav.module';
import { MzSpinnerModule } from './spinner/spinner.module';
import { MzSwitchModule } from './switch/switch.module';
import { MzTabModule } from './tab/tab.module';
import { MzTextareaModule } from './textarea/textarea.module';
import { MzTimepickerModule } from './timepicker/timepicker.module';
import { MzToastModule } from './toast/toast.module';
import { MzTooltipModule } from './tooltip/tooltip.module';
import { MzValidationModule } from './validation/validation.module';
var /** @type {?} */ MZ_MODULES = [
    CommonModule,
    FormsModule,
    MzBadgeModule,
    MzButtonModule,
    MzCardModule,
    MzCheckboxModule,
    MzChipModule,
    MzCollapsibleModule,
    MzCollectionModule,
    MzDatepickerModule,
    MzDropdownModule,
    MzFeatureDiscoveryModule,
    MzIconModule,
    MzIconMdiModule,
    MzInjectionModule,
    MzInputModule,
    MzMediaModule,
    MzModalModule,
    MzNavbarModule,
    MzPaginationModule,
    MzParallaxModule,
    MzProgressModule,
    MzRadioButtonModule,
    MzSelectModule,
    MzSidenavModule,
    MzSpinnerModule,
    MzSwitchModule,
    MzTabModule,
    MzTextareaModule,
    MzTimepickerModule,
    MzToastModule,
    MzTooltipModule,
    MzValidationModule,
];
/**
 * @deprecated
 * Import specific component modules instead (MzBadgeModule, MzCardModule, etc)
 * https://github.com/sherweb/ng2-materialize#materializemodule-deprecated
 */
var MaterializeModule = /** @class */ (function () {
    function MaterializeModule() {
    }
    /**
     * @return {?}
     */
    MaterializeModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: MaterializeModule,
        };
    };
    MaterializeModule.decorators = [
        { type: NgModule, args: [{
                    imports: MZ_MODULES,
                    exports: MZ_MODULES,
                },] },
    ];
    return MaterializeModule;
}());
export { MaterializeModule };
function MaterializeModule_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    MaterializeModule.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    MaterializeModule.ctorParameters;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0ZXJpYWxpemUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW1hdGVyaWFsaXplLyIsInNvdXJjZXMiOlsic3JjL21hdGVyaWFsaXplLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUc3QyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDckQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3hELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDbEQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDdkUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDcEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDcEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDOUQsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sOENBQThDLENBQUM7QUFDeEYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzdELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDckQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDcEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDOUQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDekUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3hELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDM0QsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3hELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNwRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDckQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzNELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBRXBFLHFCQUFNLFVBQVUsR0FBRztJQUNqQixZQUFZO0lBQ1osV0FBVztJQUNYLGFBQWE7SUFDYixjQUFjO0lBQ2QsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLHdCQUF3QjtJQUN4QixZQUFZO0lBQ1osZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixhQUFhO0lBQ2IsYUFBYTtJQUNiLGFBQWE7SUFDYixjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLGNBQWM7SUFDZCxlQUFlO0lBQ2YsZUFBZTtJQUNmLGNBQWM7SUFDZCxXQUFXO0lBQ1gsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsZUFBZTtJQUNmLGtCQUFrQjtDQUNuQixDQUFDOzs7Ozs7Ozs7Ozs7SUFZTyx5QkFBTzs7O0lBQWQ7UUFDRSxNQUFNLENBQUM7WUFDTCxRQUFRLEVBQUUsaUJBQWlCO1NBQzVCLENBQUM7S0FDSDs7Z0JBVEYsUUFBUSxTQUFDO29CQUNSLE9BQU8sRUFBRSxVQUFVO29CQUNuQixPQUFPLEVBQUUsVUFBVTtpQkFDcEI7OzRCQWpGRDs7U0FrRmEsaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IEJyb3dzZXJBbmltYXRpb25zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlci9hbmltYXRpb25zJztcclxuXHJcbmltcG9ydCB7IE16QmFkZ2VNb2R1bGUgfSBmcm9tICcuL2JhZGdlL2JhZGdlLm1vZHVsZSc7XHJcbmltcG9ydCB7IE16QnV0dG9uTW9kdWxlIH0gZnJvbSAnLi9idXR0b24vYnV0dG9uLm1vZHVsZSc7XHJcbmltcG9ydCB7IE16Q2FyZE1vZHVsZSB9IGZyb20gJy4vY2FyZC9jYXJkLm1vZHVsZSc7XHJcbmltcG9ydCB7IE16Q2hlY2tib3hNb2R1bGUgfSBmcm9tICcuL2NoZWNrYm94L2NoZWNrYm94Lm1vZHVsZSc7XHJcbmltcG9ydCB7IE16Q2hpcE1vZHVsZSB9IGZyb20gJy4vY2hpcC9jaGlwLm1vZHVsZSc7XHJcbmltcG9ydCB7IE16Q29sbGFwc2libGVNb2R1bGUgfSBmcm9tICcuL2NvbGxhcHNpYmxlL2NvbGxhcHNpYmxlLm1vZHVsZSc7XHJcbmltcG9ydCB7IE16Q29sbGVjdGlvbk1vZHVsZSB9IGZyb20gJy4vY29sbGVjdGlvbi9jb2xsZWN0aW9uLm1vZHVsZSc7XHJcbmltcG9ydCB7IE16RGF0ZXBpY2tlck1vZHVsZSB9IGZyb20gJy4vZGF0ZXBpY2tlci9kYXRlcGlja2VyLm1vZHVsZSc7XHJcbmltcG9ydCB7IE16RHJvcGRvd25Nb2R1bGUgfSBmcm9tICcuL2Ryb3Bkb3duL2Ryb3Bkb3duLm1vZHVsZSc7XHJcbmltcG9ydCB7IE16RmVhdHVyZURpc2NvdmVyeU1vZHVsZSB9IGZyb20gJy4vZmVhdHVyZS1kaXNjb3ZlcnkvZmVhdHVyZS1kaXNjb3ZlcnkubW9kdWxlJztcclxuaW1wb3J0IHsgTXpJY29uTWRpTW9kdWxlIH0gZnJvbSAnLi9pY29uLW1kaS9pY29uLW1kaS5tb2R1bGUnO1xyXG5pbXBvcnQgeyBNekljb25Nb2R1bGUgfSBmcm9tICcuL2ljb24vaWNvbi5tb2R1bGUnO1xyXG5pbXBvcnQgeyBNeklucHV0TW9kdWxlIH0gZnJvbSAnLi9pbnB1dC9pbnB1dC5tb2R1bGUnO1xyXG5pbXBvcnQgeyBNek1lZGlhTW9kdWxlIH0gZnJvbSAnLi9tZWRpYS9tZWRpYS5tb2R1bGUnO1xyXG5pbXBvcnQgeyBNek1vZGFsTW9kdWxlIH0gZnJvbSAnLi9tb2RhbC9tb2RhbC5tb2R1bGUnO1xyXG5pbXBvcnQgeyBNek5hdmJhck1vZHVsZSB9IGZyb20gJy4vbmF2YmFyL25hdmJhci5tb2R1bGUnO1xyXG5pbXBvcnQgeyBNelBhZ2luYXRpb25Nb2R1bGUgfSBmcm9tICcuL3BhZ2luYXRpb24vcGFnaW5hdGlvbi5tb2R1bGUnO1xyXG5pbXBvcnQgeyBNelBhcmFsbGF4TW9kdWxlIH0gZnJvbSAnLi9wYXJhbGxheC9wYXJhbGxheC5tb2R1bGUnO1xyXG5pbXBvcnQgeyBNelByb2dyZXNzTW9kdWxlIH0gZnJvbSAnLi9wcm9ncmVzcy9wcm9ncmVzcy5tb2R1bGUnO1xyXG5pbXBvcnQgeyBNelJhZGlvQnV0dG9uTW9kdWxlIH0gZnJvbSAnLi9yYWRpby1idXR0b24vcmFkaW8tYnV0dG9uLm1vZHVsZSc7XHJcbmltcG9ydCB7IE16U2VsZWN0TW9kdWxlIH0gZnJvbSAnLi9zZWxlY3Qvc2VsZWN0Lm1vZHVsZSc7XHJcbmltcG9ydCB7IE16SW5qZWN0aW9uTW9kdWxlIH0gZnJvbSAnLi9zaGFyZWQvaW5qZWN0aW9uL2luamVjdGlvbi5tb2R1bGUnO1xyXG5pbXBvcnQgeyBNelNpZGVuYXZNb2R1bGUgfSBmcm9tICcuL3NpZGVuYXYvc2lkZW5hdi5tb2R1bGUnO1xyXG5pbXBvcnQgeyBNelNwaW5uZXJNb2R1bGUgfSBmcm9tICcuL3NwaW5uZXIvc3Bpbm5lci5tb2R1bGUnO1xyXG5pbXBvcnQgeyBNelN3aXRjaE1vZHVsZSB9IGZyb20gJy4vc3dpdGNoL3N3aXRjaC5tb2R1bGUnO1xyXG5pbXBvcnQgeyBNelRhYk1vZHVsZSB9IGZyb20gJy4vdGFiL3RhYi5tb2R1bGUnO1xyXG5pbXBvcnQgeyBNelRleHRhcmVhTW9kdWxlIH0gZnJvbSAnLi90ZXh0YXJlYS90ZXh0YXJlYS5tb2R1bGUnO1xyXG5pbXBvcnQgeyBNelRpbWVwaWNrZXJNb2R1bGUgfSBmcm9tICcuL3RpbWVwaWNrZXIvdGltZXBpY2tlci5tb2R1bGUnO1xyXG5pbXBvcnQgeyBNelRvYXN0TW9kdWxlIH0gZnJvbSAnLi90b2FzdC90b2FzdC5tb2R1bGUnO1xyXG5pbXBvcnQgeyBNelRvb2x0aXBNb2R1bGUgfSBmcm9tICcuL3Rvb2x0aXAvdG9vbHRpcC5tb2R1bGUnO1xyXG5pbXBvcnQgeyBNelZhbGlkYXRpb25Nb2R1bGUgfSBmcm9tICcuL3ZhbGlkYXRpb24vdmFsaWRhdGlvbi5tb2R1bGUnO1xyXG5cclxuY29uc3QgTVpfTU9EVUxFUyA9IFtcclxuICBDb21tb25Nb2R1bGUsXHJcbiAgRm9ybXNNb2R1bGUsXHJcbiAgTXpCYWRnZU1vZHVsZSxcclxuICBNekJ1dHRvbk1vZHVsZSxcclxuICBNekNhcmRNb2R1bGUsXHJcbiAgTXpDaGVja2JveE1vZHVsZSxcclxuICBNekNoaXBNb2R1bGUsXHJcbiAgTXpDb2xsYXBzaWJsZU1vZHVsZSxcclxuICBNekNvbGxlY3Rpb25Nb2R1bGUsXHJcbiAgTXpEYXRlcGlja2VyTW9kdWxlLFxyXG4gIE16RHJvcGRvd25Nb2R1bGUsXHJcbiAgTXpGZWF0dXJlRGlzY292ZXJ5TW9kdWxlLFxyXG4gIE16SWNvbk1vZHVsZSxcclxuICBNekljb25NZGlNb2R1bGUsXHJcbiAgTXpJbmplY3Rpb25Nb2R1bGUsXHJcbiAgTXpJbnB1dE1vZHVsZSxcclxuICBNek1lZGlhTW9kdWxlLFxyXG4gIE16TW9kYWxNb2R1bGUsXHJcbiAgTXpOYXZiYXJNb2R1bGUsXHJcbiAgTXpQYWdpbmF0aW9uTW9kdWxlLFxyXG4gIE16UGFyYWxsYXhNb2R1bGUsXHJcbiAgTXpQcm9ncmVzc01vZHVsZSxcclxuICBNelJhZGlvQnV0dG9uTW9kdWxlLFxyXG4gIE16U2VsZWN0TW9kdWxlLFxyXG4gIE16U2lkZW5hdk1vZHVsZSxcclxuICBNelNwaW5uZXJNb2R1bGUsXHJcbiAgTXpTd2l0Y2hNb2R1bGUsXHJcbiAgTXpUYWJNb2R1bGUsXHJcbiAgTXpUZXh0YXJlYU1vZHVsZSxcclxuICBNelRpbWVwaWNrZXJNb2R1bGUsXHJcbiAgTXpUb2FzdE1vZHVsZSxcclxuICBNelRvb2x0aXBNb2R1bGUsXHJcbiAgTXpWYWxpZGF0aW9uTW9kdWxlLFxyXG5dO1xyXG5cclxuLyoqXHJcbiAqIEBkZXByZWNhdGVkXHJcbiAqIEltcG9ydCBzcGVjaWZpYyBjb21wb25lbnQgbW9kdWxlcyBpbnN0ZWFkIChNekJhZGdlTW9kdWxlLCBNekNhcmRNb2R1bGUsIGV0YylcclxuICogaHR0cHM6Ly9naXRodWIuY29tL3NoZXJ3ZWIvbmcyLW1hdGVyaWFsaXplI21hdGVyaWFsaXplbW9kdWxlLWRlcHJlY2F0ZWRcclxuICovXHJcbkBOZ01vZHVsZSh7XHJcbiAgaW1wb3J0czogTVpfTU9EVUxFUyxcclxuICBleHBvcnRzOiBNWl9NT0RVTEVTLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTWF0ZXJpYWxpemVNb2R1bGUge1xyXG4gIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmdNb2R1bGU6IE1hdGVyaWFsaXplTW9kdWxlLFxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19